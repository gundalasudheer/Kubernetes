 In this cheatsheet we will see the useful kubernetes commands

 1. kubectl run <podname> --image=<imagename>
    This command will create the pod with given name and image.
 2. kubectl create -f <file.yaml>
    This will create the object from the yaml file we provided.
 3. kubectl run <podname> --image-<imagename> --dry-run=client -o yaml > <file.yaml>
    By using this command we can generate the yaml file(file.yaml) for the pod using the provided image.    
 4. kubectl get pods
    This command will display all the pods running.
 5. kubectl get pods -o wide
    This command will be used to get more details about the pod.
 6. kubectl describe pod <podname>
    This will give the complete details of the provided pod.    
 7. kubectl cluster-info
    Provides the cluster information.
 8. kubectl get nodes
    It will display all the nodes of the cluster.         
 9. kubectl delete pod <podname>
    It will delete the given pod.
 10. kubectl get replicaset / kubectl get rs
     This will display the replicaset details.
 11. kubectl delete replicaset <replicasetname>
     This will delete the replicaset along with the pods associated with it.
 12. kubectl replace -f <replicasetfile.yaml>
     This will update the replicaset with the changes made in the yaml file.
 13. kubectl scale --replicas=<numberofreplicas> -f <replicatsetfile.yaml>
     This command will scale the replicaset without updating the yaml file.
 14. kubectl describe replicaset <replicaset name>
     It will give complete details about the replicaset.     
 15. kubectl edit replicaset <replicasetname> / kubectl scale replicaset <replicaset name> --replicas=<requirednumber>
     These commands will update the replicaset configuration directly on the server but they dont get updated on the definition file.
 16. kubectl get deployments
     This comand will display the deployment details.
 17. kubectl get all
     This command will give the details of all the deployments,replicasets and pods at once.
 18. kubectl apply -f <definition.yaml>
     This command will update the changes to the object with the definition file. if object is not found then it will create the object.
 19. kubectl rollout status deployment / <deploymentname>
     This will show you the status of the rollout.
 20. kubectl rollout history deployment / <deploymentname>
     It shows the rollout history.
 21. kubectl rollout undo deployment / <deploymentname>
     It will undo the update to the given deployment.            
 22. kubectl create -f deployment.yaml --record
     This command will record the change of cause. you can check this using the kubectl rollout history command.
 23. kubectl create deployment <deploymentname> --image=<imagename> --replicas=<numberofreplicas> --dry-run=client -o yaml > <requireddeploymentfiletosave.yaml>   
 24. kubectl get services
     This will display the service created.